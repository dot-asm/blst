name: ubuntu-latest

on:
  push:
    branches:
    - '**'
  workflow_dispatch:
    branches:
    - '**'
  pull_request:
    branches:
    - master

jobs:
  rust-n-go:
    runs-on: [ ubuntu-latest, windows-latest ]

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          **/Cargo.lock
          **/bindings/rust/target
        key: ${{ runner.os }}-cargo-5
        restore-keys: ${{ runner.os }}-cargo-4

    - name: Environment
      run: |
        lscpu 2>/dev/null && echo --- || true
        env | sort
      shell: bash

    - name: Rust
      run: |
        rustc --version
        cd bindings/rust
        if [ "$GITHUB_EVENT_NAME" != "pull_request" ]; then
            cargo update
        fi
        cargo test --release
        cargo clean -p blst
        cargo clean -p blst --release
        rm -rf target/.rustc_info.json
        rm -rf target/{debug,release}/*/blst-*
        rm -rf target/{debug,release}/incremental
        rm -rf target/{debug,release}/build/src
        rm -rf target/{debug,release}/build/build
        rm -rf ~/.cargo/registry/src
        rm -rf ~/.cargo/registry/index/*/.cache
      shell: bash

    - name: Go
      run: |
        go version
        if ! (grep -q -e '^flags.*\badx\b' /proc/cpuinfo) 2>/dev/null; then
            export CGO_CFLAGS="-O -D__BLST_PORTABLE__"
        fi
        cd bindings/go
        go test -test.v
      shell: bash

  misc:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: ~/swig
        key: ${{ runner.os }}-swig-pr1746

    - uses: actions/setup-java@v1
      with:
        java-version: 11

    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Environment
      run: |
        lscpu
        echo ---
        env | sort

    - name: Python
      run: if [ -x bindings/python/run.me ]; then bindings/python/run.me; fi

    - name: Java
      run: if [ -x bindings/java/run.me ]; then bindings/java/run.me; fi

    - name: Node.js
      run: |
        node_js=bindings/node.js
        if [ -x $node_js/run.me ]; then
            if [ ! -x ~/swig/bin/swig ]; then
              ( git clone -b pr/new-node-fixes https://github.com/yegorich/swig;
                cd swig;
                ./autogen.sh;
                ./configure --prefix=$HOME/swig;
                make;
                make install;
              )
            fi
            env PATH=~/swig/bin:$PATH SWIG_LIB=~/swig/share/swig/4.0.2 \
                $node_js/run.me
        fi
        if [ -f $node_js/binding.gyp -a -f $node_js/blst_wrap.cpp ]; then
            if which npm > /dev/null 2>&1; then
              npm install --global node-gyp || true
            fi
            if which node-gyp > /dev/null 2>&1; then
              ( cd $node_js;
                node-gyp configure;
                node-gyp build;
                env NODE_PATH=build/Release: node runnable.js;
              ) || true
            fi
        fi
